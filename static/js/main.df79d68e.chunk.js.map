{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","sections/TitlesSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","className","Component","DownIcon","src","process","icon","style","maxWidth","TitlesSection","state","color","theme","changeColor","setState","changeTheme","Container","Row","Col","md","Button","variant","onClick","onMouseOver","onMouseLeave","data","title","subtitle","Object","keys","links","map","key","url","activeClass","to","spy","smooth","offset","duration","delay","icons","down","name","AboutSection","sections","items","content","SkillCard","skill","Card","bg","height","Img","image","Body","Header","backgroundColor","Text","desc","SkillSection","CardDeck","eachskill","theme1","theme2","class","href","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.df79d68e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport './Fullpage.css'\r\n\r\nclass Fullpage extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n\r\n      <div className={`Fullpage ${this.props.className || \"\"}`}>{children}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fullpage;\r\n","import React, { component } from \"react\";\r\n\r\nconst DownIcon = (props) => {\r\n  return (\r\n    <div>\r\n      <image>\r\n      \r\n      </image>\r\n      <img\r\n        src={process.env.PUBLIC_URL+props.icon}\r\n        style={{\r\n          maxWidth: \"30px\",\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DownIcon;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport DownIcon from \"../components/DownIcon\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass TitlesSection extends Component {\r\n  state = {\r\n    color: \"white\",\r\n    theme: \"first2\",\r\n  };\r\n\r\n  changeColor = () => {\r\n    this.setState({\r\n      color: this.state.color === \"white\" ? \"yellow\" : \"white\",\r\n    });\r\n  };\r\n\r\n  changeTheme = () => {\r\n    this.setState({\r\n      theme: this.state.theme === \"first2\" ? \"first\" : \"first2\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Row>\r\n            <Col md={2}>\r\n              <Button variant=\"link\" onClick={() => this.changeTheme()}>\r\n                Change Color\r\n              </Button>\r\n            </Col>\r\n            <Col md={10}></Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Fullpage className={this.state.theme}>\r\n          <h1\r\n            className=\"title\"\r\n            style={{\r\n              color: this.state.color,\r\n            }}\r\n            onMouseOver={() => this.changeColor()}\r\n            onMouseLeave={() => this.changeColor()}\r\n          >\r\n            {data.title}\r\n          </h1>\r\n          <div>\r\n            <h2>{data.subtitle}</h2>\r\n          </div>\r\n          <div>\r\n            {Object.keys(data.links).map((key) => {\r\n              return <SocialIcon url={data.links[key]} />;\r\n            })}\r\n          </div>\r\n\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"About\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={1}\r\n            duration={500}\r\n            delay={0}\r\n          >\r\n            <DownIcon\r\n              icon={data.icons.down}\r\n              // onClick={() => console.log(`i m working`)}\r\n            ></DownIcon>\r\n          </Link>\r\n        </Fullpage>\r\n        <Element name=\"About\" className=\"element\"></Element>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TitlesSection;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport \"./paragraphs.css\";\r\n\r\nclass AboutSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"Second\">\r\n          <h3>{data.sections[0].title}</h3>\r\n          <div className=\"paragraphs\">\r\n            <p>{data.sections[0].items[0].content}</p>\r\n          </div>\r\n        </Fullpage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AboutSection;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardGroup from \"react-bootstrap/CardGroup\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport \"./SkillCard.css\";\r\n\r\nclass SkillCard extends Component {\r\n  render() {\r\n    const { skill } = this.props;\r\n    return (\r\n     \r\n        <Card bg=\"success\" style={{\r\n          height:\"300px\"\r\n        }}>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={process.env.PUBLIC_URL + skill.content.image}\r\n            style={{\r\n              maxWidth: \"50px\",\r\n            }}\r\n          />\r\n          <Card.Body>\r\n            <Card.Header\r\n            \r\n              style={{\r\n                color: \"black\",\r\n                backgroundColor:\"white\"\r\n              }}\r\n            >\r\n              {skill.content.title}\r\n            </Card.Header>\r\n\r\n            <Card.Text\r\n              style={{\r\n                color: \"black\",\r\n              }}\r\n            >\r\n              <br/>\r\n              {skill.content.desc}\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n       \r\n\r\n      //   <div className=\"card\">\r\n      //   <div className=\"image-wrapper\">\r\n      //     <img src={skill.content.image} />\r\n      //   </div>\r\n      //   <div className=\"skill-title-wrapper\">\r\n      //     <h4>{skill.content.title}</h4>\r\n      //   </div>\r\n      // </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillCard;\r\n","import React, { Component } from \"react\";\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport \"./SkillSection.css\";\r\nimport SkillCars from \"../components/SkillCard\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport CardGroup from \"react-bootstrap/CardGroup\";\r\nimport CardDeck from \"react-bootstrap/CardDeck\";\r\n\r\nclass SkillSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Element name=\"Skills\" className=\"element\">\r\n        </Element>\r\n        <Fullpage className=\"third\">\r\n          <h3>{data.sections[1].title}</h3>\r\n          <CardDeck>\r\n            {data.sections[1].items.map((eachskill) => {\r\n              return (\r\n                <SkillCars skill={eachskill} />\r\n              );\r\n            })}\r\n          </CardDeck>\r\n        </Fullpage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SkillSection;\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { Link, Element } from \"react-scroll\";\r\nimport Fullpage from \"../components/Fullpage\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    theme1: \"first\",\r\n    theme2: \"first2\",\r\n  };\r\n\r\n  changeColor = () => {\r\n    this.setState({\r\n      // className:\"first\",//this.state.theme1 === \"first\" ? \"first2\" : \"first\",\r\n      // color: this.state.color1 === \"blue\" ? \"yellow\" : \"blue\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Row>\r\n           \r\n            <Col md={9}></Col>\r\n            <Col md={3}>\r\n              <ul class=\"nav\">\r\n                <Link\r\n                  activeClass=\"active\"\r\n                  to=\"About\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  offset={1}\r\n                  duration={500}\r\n                  delay={0}\r\n                >\r\n                  <li>\r\n                    <a href=\"#about\">About</a>\r\n                  </li>\r\n                </Link>\r\n\r\n                <Link\r\n                  activeClass=\"active\"\r\n                  to=\"Skills\"\r\n                  spy={true}\r\n                  smooth={true}\r\n                  offset={1}\r\n                  duration={500}\r\n                  delay={0}\r\n                >\r\n                  <li>\r\n                    <a href=\"#skills\">Skills</a>\r\n                  </li>\r\n                </Link>\r\n              </ul>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React, { Component } from \"react\";\nimport TitlesAndIcons from \"./sections/TitlesSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SnowStorm from 'react-snowstorm';\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <TitlesAndIcons />\n      <AboutSection />\n      <SkillSection />\n      <SnowStorm/>\n     \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}